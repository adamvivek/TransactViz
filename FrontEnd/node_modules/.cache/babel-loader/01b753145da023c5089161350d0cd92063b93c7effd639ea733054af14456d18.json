{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vivek.A\\\\Desktop\\\\TransactViz\\\\client\\\\src\\\\components\\\\BarChart.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport '../styles/BarChart.css';\nimport axios from 'axios';\nimport { Bar } from 'react-chartjs-2';\nimport 'chart.js/auto';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BarChart = ({\n  selectedMonth\n}) => {\n  _s();\n  const [barChartData, setBarChartData] = useState(null);\n  const priceRanges = ['0-100', '101-200', '201-300', '301-400', '401-500', '501-600', '601-700', '701-800', '801-900', '901-above'];\n  useEffect(() => {\n    const fetchBarChartData = async () => {\n      try {\n        const res = await axios.get(`http://localhost:5001/api/barchart?month=${selectedMonth}`);\n        const apiData = res.data;\n        const mappedData = priceRanges.map(range => {\n          const foundRange = apiData.find(item => item._id === parseInt(range.split('-')[0], 10));\n          return foundRange ? foundRange.itemCount : 0;\n        });\n        setBarChartData({\n          labels: priceRanges,\n          datasets: [{\n            label: 'Items Count',\n            data: mappedData,\n            backgroundColor: '#67E8F9',\n            borderColor: '#22D3EE',\n            borderWidth: 1\n          }]\n        });\n      } catch (error) {\n        console.error('Error fetching bar chart data:', error);\n      }\n    };\n    fetchBarChartData();\n  }, [selectedMonth]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bar-chart\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Bar Chart Stats - \", new Date(selectedMonth).toLocaleString('en-US', {\n        month: 'long'\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), barChartData ? /*#__PURE__*/_jsxDEV(Bar, {\n      data: barChartData,\n      options: {\n        scales: {\n          y: {\n            beginAtZero: true\n          }\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading chart data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n_s(BarChart, \"3fpgLZjcbr61SC0dnusf96Qar3M=\");\n_c = BarChart;\nexport default BarChart;\nvar _c;\n$RefreshReg$(_c, \"BarChart\");","map":{"version":3,"names":["React","useState","useEffect","axios","Bar","jsxDEV","_jsxDEV","BarChart","selectedMonth","_s","barChartData","setBarChartData","priceRanges","fetchBarChartData","res","get","apiData","data","mappedData","map","range","foundRange","find","item","_id","parseInt","split","itemCount","labels","datasets","label","backgroundColor","borderColor","borderWidth","error","console","className","children","Date","toLocaleString","month","fileName","_jsxFileName","lineNumber","columnNumber","options","scales","y","beginAtZero","_c","$RefreshReg$"],"sources":["C:/Users/Vivek.A/Desktop/TransactViz/client/src/components/BarChart.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport '../styles/BarChart.css';\r\nimport axios from 'axios';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport 'chart.js/auto';\r\n\r\nconst BarChart = ({ selectedMonth }) => {\r\n    const [barChartData, setBarChartData] = useState(null);\r\n    const priceRanges = [\r\n        '0-100', '101-200', '201-300', '301-400',\r\n        '401-500', '501-600', '601-700', '701-800',\r\n        '801-900', '901-above',\r\n    ];\r\n\r\n    useEffect(() => {\r\n        const fetchBarChartData = async () => {\r\n            try {\r\n                const res = await axios.get(`http://localhost:5001/api/barchart?month=${selectedMonth}`);\r\n                const apiData = res.data;\r\n\r\n                const mappedData = priceRanges.map((range) => {\r\n                    const foundRange = apiData.find((item) => item._id === parseInt(range.split('-')[0], 10));\r\n                    return foundRange ? foundRange.itemCount : 0;\r\n                });\r\n\r\n                setBarChartData({\r\n                    labels: priceRanges,\r\n                    datasets: [\r\n                        {\r\n                            label: 'Items Count',\r\n                            data: mappedData,\r\n                            backgroundColor: '#67E8F9',\r\n                            borderColor: '#22D3EE',\r\n                            borderWidth: 1,\r\n                        },\r\n                    ],\r\n                });\r\n            } catch (error) {\r\n                console.error('Error fetching bar chart data:', error);\r\n            }\r\n        };\r\n\r\n        fetchBarChartData();\r\n    }, [selectedMonth]);\r\n\r\n    return (\r\n        <div className=\"bar-chart\">\r\n            <h2>Bar Chart Stats - {new Date(selectedMonth).toLocaleString('en-US', { month: 'long' })}</h2>\r\n            {barChartData ? (\r\n                <Bar\r\n                    data={barChartData}\r\n                    options={{\r\n                        scales: {\r\n                            y: {\r\n                                beginAtZero: true,\r\n                            },\r\n                        },\r\n                    }}\r\n                />\r\n            ) : (\r\n                <p>Loading chart data...</p>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default BarChart;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,wBAAwB;AAC/B,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,GAAG,QAAQ,iBAAiB;AACrC,OAAO,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvB,MAAMC,QAAQ,GAAGA,CAAC;EAAEC;AAAc,CAAC,KAAK;EAAAC,EAAA;EACpC,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAMW,WAAW,GAAG,CAChB,OAAO,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EACxC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAC1C,SAAS,EAAE,WAAW,CACzB;EAEDV,SAAS,CAAC,MAAM;IACZ,MAAMW,iBAAiB,GAAG,MAAAA,CAAA,KAAY;MAClC,IAAI;QACA,MAAMC,GAAG,GAAG,MAAMX,KAAK,CAACY,GAAG,CAAC,4CAA4CP,aAAa,EAAE,CAAC;QACxF,MAAMQ,OAAO,GAAGF,GAAG,CAACG,IAAI;QAExB,MAAMC,UAAU,GAAGN,WAAW,CAACO,GAAG,CAAEC,KAAK,IAAK;UAC1C,MAAMC,UAAU,GAAGL,OAAO,CAACM,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACC,GAAG,KAAKC,QAAQ,CAACL,KAAK,CAACM,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;UACzF,OAAOL,UAAU,GAAGA,UAAU,CAACM,SAAS,GAAG,CAAC;QAChD,CAAC,CAAC;QAEFhB,eAAe,CAAC;UACZiB,MAAM,EAAEhB,WAAW;UACnBiB,QAAQ,EAAE,CACN;YACIC,KAAK,EAAE,aAAa;YACpBb,IAAI,EAAEC,UAAU;YAChBa,eAAe,EAAE,SAAS;YAC1BC,WAAW,EAAE,SAAS;YACtBC,WAAW,EAAE;UACjB,CAAC;QAET,CAAC,CAAC;MACN,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;MAC1D;IACJ,CAAC;IAEDrB,iBAAiB,CAAC,CAAC;EACvB,CAAC,EAAE,CAACL,aAAa,CAAC,CAAC;EAEnB,oBACIF,OAAA;IAAK8B,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACtB/B,OAAA;MAAA+B,QAAA,GAAI,oBAAkB,EAAC,IAAIC,IAAI,CAAC9B,aAAa,CAAC,CAAC+B,cAAc,CAAC,OAAO,EAAE;QAAEC,KAAK,EAAE;MAAO,CAAC,CAAC;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,EAC9FlC,YAAY,gBACTJ,OAAA,CAACF,GAAG;MACAa,IAAI,EAAEP,YAAa;MACnBmC,OAAO,EAAE;QACLC,MAAM,EAAE;UACJC,CAAC,EAAE;YACCC,WAAW,EAAE;UACjB;QACJ;MACJ;IAAE;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,gBAEFtC,OAAA;MAAA+B,QAAA,EAAG;IAAqB;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAC9B;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAACnC,EAAA,CA1DIF,QAAQ;AAAA0C,EAAA,GAAR1C,QAAQ;AA4Dd,eAAeA,QAAQ;AAAC,IAAA0C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}