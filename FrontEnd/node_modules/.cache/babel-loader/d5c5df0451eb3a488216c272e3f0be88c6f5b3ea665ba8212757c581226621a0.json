{"ast":null,"code":"// src/components/BarChart/BarChart.jsx\nimport React,{useState,useEffect}from'react';import'../styles/BarChart.css';import axios from'axios';import{Bar}from'react-chartjs-2';import'chart.js/auto';import{jsxs as _jsxs,jsx as _jsx}from\"react/jsx-runtime\";const BarChart=()=>{const[month,setMonth]=useState(3);// Default is March\nconst[barChartData,setBarChartData]=useState(null);const priceRanges=['0-100','101-200','201-300','301-400','401-500','501-600','601-700','701-800','801-900','901-above'];const monthNames=[\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"];useEffect(()=>{const fetchBarChartData=async()=>{try{const res=await axios.get(`http://localhost:5000/api/barchart?month=${month}`);const apiData=res.data;const mappedData=priceRanges.map(range=>{const foundRange=apiData.find(item=>item.priceRange===range);return foundRange?foundRange.itemCount:0;});const chartData={labels:priceRanges,datasets:[{label:'Items Count',data:mappedData,backgroundColor:'#3e7f91',borderColor:'#3e7f91',borderWidth:1}]};setBarChartData(chartData);}catch(error){console.error('Error fetching bar chart data:',error);}};fetchBarChartData();});const handleMonthChange=e=>{setMonth(parseInt(e.target.value));};return/*#__PURE__*/_jsxs(\"div\",{className:\"bar-chart\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"header\",children:[/*#__PURE__*/_jsxs(\"h1\",{className:\"chart-title\",children:[\"Bar Chart - \",monthNames[month-1]]}),/*#__PURE__*/_jsx(\"select\",{value:month,onChange:handleMonthChange,children:monthNames.map((m,index)=>/*#__PURE__*/_jsx(\"option\",{value:index+1,children:m},index))})]}),/*#__PURE__*/_jsx(\"div\",{className:\"bar-chart-container\",children:barChartData?/*#__PURE__*/_jsx(Bar,{data:barChartData,options:{scales:{y:{beginAtZero:true,ticks:{stepSize:1// Ensures whole numbers on y-axis\n}},x:{reverse:false}}}}):/*#__PURE__*/_jsx(\"p\",{children:\"Loading chart data...\"})})]});};export default BarChart;","map":{"version":3,"names":["React","useState","useEffect","axios","Bar","jsxs","_jsxs","jsx","_jsx","BarChart","month","setMonth","barChartData","setBarChartData","priceRanges","monthNames","fetchBarChartData","res","get","apiData","data","mappedData","map","range","foundRange","find","item","priceRange","itemCount","chartData","labels","datasets","label","backgroundColor","borderColor","borderWidth","error","console","handleMonthChange","e","parseInt","target","value","className","children","onChange","m","index","options","scales","y","beginAtZero","ticks","stepSize","x","reverse"],"sources":["C:/Users/Vivek.A/Desktop/TransactViz/client/src/components/BarChart.jsx"],"sourcesContent":["// src/components/BarChart/BarChart.jsx\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport '../styles/BarChart.css';\r\nimport axios from 'axios';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport 'chart.js/auto';\r\n\r\nconst BarChart = () => {\r\n    const [month, setMonth] = useState(3); // Default is March\r\n    const [barChartData, setBarChartData] = useState(null);\r\n    const priceRanges = [\r\n        '0-100', '101-200', '201-300', '301-400',\r\n        '401-500', '501-600', '601-700', '701-800',\r\n        '801-900', '901-above'\r\n    ];\r\n    const monthNames = [\r\n        \"January\", \"February\", \"March\", \"April\",\r\n        \"May\", \"June\", \"July\", \"August\",\r\n        \"September\", \"October\", \"November\", \"December\"\r\n    ];\r\n\r\n    useEffect(() => {\r\n        const fetchBarChartData = async () => {\r\n            try {\r\n                const res = await axios.get(`http://localhost:5000/api/barchart?month=${month}`);\r\n                const apiData = res.data;\r\n\r\n                const mappedData = priceRanges.map(range => {\r\n                    const foundRange = apiData.find(item => item.priceRange === range);\r\n                    return foundRange ? foundRange.itemCount : 0;\r\n                });\r\n\r\n                const chartData = {\r\n                    labels: priceRanges,\r\n                    datasets: [\r\n                        {\r\n                            label: 'Items Count',\r\n                            data: mappedData,\r\n                            backgroundColor: '#3e7f91',\r\n                            borderColor: '#3e7f91',\r\n                            borderWidth: 1\r\n                        }\r\n                    ]\r\n                };\r\n\r\n                setBarChartData(chartData);\r\n            } catch (error) {\r\n                console.error('Error fetching bar chart data:', error);\r\n            }\r\n        };\r\n\r\n        fetchBarChartData();\r\n    }, );\r\n\r\n    const handleMonthChange = (e) => {\r\n        setMonth(parseInt(e.target.value));\r\n    };\r\n\r\n    return (\r\n        <div className=\"bar-chart\">           \r\n            <div className=\"header\">\r\n            <h1 className=\"chart-title\">Bar Chart - {monthNames[month - 1]}</h1> \r\n                <select value={month} onChange={handleMonthChange}>\r\n                    {monthNames.map((m, index) => (\r\n                        <option key={index} value={index + 1}>{m}</option>\r\n                    ))}\r\n                </select>\r\n            </div>\r\n            \r\n            <div className=\"bar-chart-container\">\r\n                {barChartData ? (\r\n                    <Bar \r\n                        data={barChartData}\r\n                        options={{\r\n                            scales: {\r\n                                y: {\r\n                                    beginAtZero: true,\r\n                                    ticks: {\r\n                                        stepSize: 1, // Ensures whole numbers on y-axis\r\n                                    }\r\n                                },\r\n                                x: {\r\n                                    reverse: false,\r\n                                }\r\n                            }\r\n                        }}\r\n                    />\r\n                ) : (\r\n                    <p>Loading chart data...</p>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default BarChart;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}