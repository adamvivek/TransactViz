{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vivek.A\\\\Desktop\\\\TransactViz\\\\client\\\\src\\\\components\\\\BarChart.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport '../styles/BarChart.css';\nimport axios from 'axios';\nimport { Bar } from 'react-chartjs-2';\nimport 'chart.js/auto';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BarChart = ({\n  selectedYear,\n  selectedMonth\n}) => {\n  _s();\n  const [barChartData, setBarChartData] = useState(null);\n  const priceRanges = ['0-100', '101-200', '201-300', '301-400', '401-500', '501-600', '601-700', '701-800', '801-900', '901-above'];\n  useEffect(() => {\n    const fetchBarChartData = async () => {\n      try {\n        const res = await axios.get(`http://localhost:5001/api/barchart?month=${selectedYear}-${String(selectedMonth).padStart(2, '0')}`);\n        const apiData = res.data;\n        const mappedData = priceRanges.map(range => {\n          const foundRange = apiData.find(item => item._id === parseInt(range.split('-')[0]));\n          return foundRange ? foundRange.itemCount : 0;\n        });\n        const chartData = {\n          labels: priceRanges,\n          datasets: [{\n            label: 'Items Count',\n            data: mappedData,\n            backgroundColor: '#72c7ec',\n            borderColor: '#3e7f91',\n            borderWidth: 1\n          }]\n        };\n        setBarChartData(chartData);\n      } catch (error) {\n        console.error('Error fetching bar chart data:', error);\n      }\n    };\n    fetchBarChartData();\n  }, [selectedYear, selectedMonth]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bar-chart\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"chart-title\",\n      children: [\"Bar Chart Stats - \", new Date(selectedYear, selectedMonth - 1).toLocaleString('default', {\n        month: 'long'\n      }), \" \", selectedYear]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bar-chart-container\",\n      children: barChartData ? /*#__PURE__*/_jsxDEV(Bar, {\n        data: barChartData,\n        options: {\n          scales: {\n            y: {\n              beginAtZero: true\n            }\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading chart data...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n};\n_s(BarChart, \"3fpgLZjcbr61SC0dnusf96Qar3M=\");\n_c = BarChart;\nexport default BarChart;\nvar _c;\n$RefreshReg$(_c, \"BarChart\");","map":{"version":3,"names":["React","useState","useEffect","axios","Bar","jsxDEV","_jsxDEV","BarChart","selectedYear","selectedMonth","_s","barChartData","setBarChartData","priceRanges","fetchBarChartData","res","get","String","padStart","apiData","data","mappedData","map","range","foundRange","find","item","_id","parseInt","split","itemCount","chartData","labels","datasets","label","backgroundColor","borderColor","borderWidth","error","console","className","children","Date","toLocaleString","month","fileName","_jsxFileName","lineNumber","columnNumber","options","scales","y","beginAtZero","_c","$RefreshReg$"],"sources":["C:/Users/Vivek.A/Desktop/TransactViz/client/src/components/BarChart.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport '../styles/BarChart.css';\r\nimport axios from 'axios';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport 'chart.js/auto';\r\n\r\nconst BarChart = ({ selectedYear, selectedMonth }) => {\r\n    const [barChartData, setBarChartData] = useState(null);\r\n    const priceRanges = [\r\n        '0-100', '101-200', '201-300', '301-400',\r\n        '401-500', '501-600', '601-700', '701-800',\r\n        '801-900', '901-above'\r\n    ];\r\n\r\n    useEffect(() => {\r\n        const fetchBarChartData = async () => {\r\n            try {\r\n                const res = await axios.get(`http://localhost:5001/api/barchart?month=${selectedYear}-${String(selectedMonth).padStart(2, '0')}`);\r\n                const apiData = res.data;\r\n\r\n                const mappedData = priceRanges.map(range => {\r\n                    const foundRange = apiData.find(item => item._id === parseInt(range.split('-')[0]));\r\n                    return foundRange ? foundRange.itemCount : 0;\r\n                });\r\n\r\n                const chartData = {\r\n                    labels: priceRanges,\r\n                    datasets: [\r\n                        {\r\n                            label: 'Items Count',\r\n                            data: mappedData,\r\n                            backgroundColor: '#72c7ec',\r\n                            borderColor: '#3e7f91',\r\n                            borderWidth: 1\r\n                        }\r\n                    ]\r\n                };\r\n\r\n                setBarChartData(chartData);\r\n            } catch (error) {\r\n                console.error('Error fetching bar chart data:', error);\r\n            }\r\n        };\r\n\r\n        fetchBarChartData();\r\n    }, [selectedYear, selectedMonth]);\r\n\r\n    return (\r\n        <div className=\"bar-chart\">\r\n            <h2 className=\"chart-title\">Bar Chart Stats - {new Date(selectedYear, selectedMonth - 1).toLocaleString('default', { month: 'long' })} {selectedYear}</h2>\r\n            <div className=\"bar-chart-container\">\r\n                {barChartData ? (\r\n                    <Bar \r\n                        data={barChartData}\r\n                        options={{\r\n                            scales: {\r\n                                y: {\r\n                                    beginAtZero: true,\r\n                                }\r\n                            }\r\n                        }}\r\n                    />\r\n                ) : (\r\n                    <p>Loading chart data...</p>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default BarChart;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}